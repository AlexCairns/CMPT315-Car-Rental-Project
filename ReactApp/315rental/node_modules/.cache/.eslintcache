[{"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\index.js":"1","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\App.js":"2","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\reportWebVitals.js":"3","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\NoPage.js":"4","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Contact.js":"5","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\Header.js":"6","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\Footer.js":"7","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\LocationDSearch.js":"8","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\LocationPSearch.js":"9","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\TimePSelector.js":"10","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\DatePSelector.js":"11","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\TimeDSelector.js":"12","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\DateDSelector.js":"13","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Home.jsx":"14","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Cars.jsx":"15","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\CarFilter.js":"16","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\AdminHeader.js":"17","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\UpdateClient.jsx":"18","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Details.jsx":"19","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Rentals.jsx":"20","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Returns.jsx":"21","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Home.jsx":"22","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Cars.jsx":"23","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\RentCar.jsx":"24"},{"size":552,"mtime":1663790723386,"results":"25","hashOfConfig":"26"},{"size":1535,"mtime":1669338546627,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1663735908645,"results":"28","hashOfConfig":"26"},{"size":201,"mtime":1664336578959,"results":"29","hashOfConfig":"26"},{"size":201,"mtime":1664336578959,"results":"30","hashOfConfig":"26"},{"size":6208,"mtime":1665001946893,"results":"31","hashOfConfig":"26"},{"size":2882,"mtime":1669441093918,"results":"32","hashOfConfig":"26"},{"size":1981,"mtime":1669323364230,"results":"33","hashOfConfig":"26"},{"size":1981,"mtime":1665533101529,"results":"34","hashOfConfig":"26"},{"size":895,"mtime":1664412905879,"results":"35","hashOfConfig":"26"},{"size":938,"mtime":1669322588014,"results":"36","hashOfConfig":"26"},{"size":896,"mtime":1667421151271,"results":"37","hashOfConfig":"26"},{"size":939,"mtime":1664412679098,"results":"38","hashOfConfig":"26"},{"size":5721,"mtime":1669440913109,"results":"39","hashOfConfig":"26"},{"size":4459,"mtime":1669440839231,"results":"40","hashOfConfig":"26"},{"size":14716,"mtime":1669330559378,"results":"41","hashOfConfig":"26"},{"size":6198,"mtime":1669338477850,"results":"42","hashOfConfig":"26"},{"size":11489,"mtime":1669409310405,"results":"43","hashOfConfig":"26"},{"size":7691,"mtime":1669339706960,"results":"44","hashOfConfig":"26"},{"size":249,"mtime":1669338580942,"results":"45","hashOfConfig":"26"},{"size":249,"mtime":1669338614229,"results":"46","hashOfConfig":"26"},{"size":2129,"mtime":1669337701989,"results":"47","hashOfConfig":"26"},{"size":22133,"mtime":1669440738302,"results":"48","hashOfConfig":"26"},{"size":12264,"mtime":1669409310405,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1pyoevj",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\index.js",[],[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\App.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\reportWebVitals.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\NoPage.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Contact.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\Header.js",["129"],[],"import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport CarRentalIcon from '@mui/icons-material/CarRental';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport Link from '@mui/material/Link';\r\n\r\n// Changes color to a reddish color\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {    \r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000',\r\n        }\r\n    }\r\n})\r\n\r\n/*MUI AppBar modified tempalte*/\r\nconst pages = ['Cars', 'Reservations', 'Deals', 'Locations'];\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\n\r\nconst HomeAppBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <AppBar position=\"static\">\r\n            <Container maxWidth=\"xxxl\">\r\n                <Toolbar disableGutters>\r\n                    <CarRentalIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 , color: 'white'}} />\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"a\"\r\n                        href=\"/\"\r\n                        sx={{\r\n                        mr: 2,\r\n                        display: { xs: 'none', md: 'flex' },\r\n                        fontFamily: 'monospace',\r\n                        fontWeight: 700,\r\n                        letterSpacing: '.3rem',\r\n                        color: 'white',\r\n                        textDecoration: 'none',\r\n                        }}\r\n                    >\r\n                        CarGrab\r\n                    </Typography>\r\n\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                        size=\"large\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleOpenNavMenu}\r\n                        color=\"inherit\"\r\n                        >\r\n                    <MenuIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorElNav}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={Boolean(anchorElNav)}\r\n                    onClose={handleCloseNavMenu}\r\n                    sx={{\r\n                        display: { xs: 'block', md: 'none' },\r\n                    }}\r\n                    >\r\n                    {pages.map((page) => (\r\n                        <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                        <Typography textAlign=\"center\">{page}</Typography>\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Menu>\r\n                </Box>\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        {pages.map((page) => (\r\n                        <Button\r\n                            key={page}\r\n                            onClick={handleCloseNavMenu}\r\n                            sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none'}}\r\n                            href={`/${page}`}\r\n                        >\r\n                            {page}\r\n                        </Button>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    <Box sx={{ flexGrow: 0 }}>\r\n                        <Tooltip title=\"Open settings\">\r\n                        <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                        sx={{ mt: '45px' }}\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorElUser}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={Boolean(anchorElUser)}\r\n                        onClose={handleCloseUserMenu}\r\n                        >\r\n                        {settings.map((setting) => (\r\n                            <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                            <Typography textAlign=\"center\">{setting}</Typography>\r\n                            </MenuItem>\r\n                        ))}\r\n                        </Menu>\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default HomeAppBar;\r\n","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\Footer.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\LocationDSearch.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\LocationPSearch.js",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\TimePSelector.js",["130"],[],"import * as React from 'react';\r\nimport moment from 'moment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function MaterialUIPickers() {\r\n  const [value, setValue] = React.useState(moment('2014-08-18T21:11:54'));\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n        <TimePicker\r\n          label=\"Pick-up Time\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\DatePSelector.js",["131"],[],"import * as React from 'react';\r\nimport moment from 'moment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function MaterialUIPickers() {\r\n  const [value, setValue] = React.useState(moment('2014-08-18T21:11:54'));\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n        <DesktopDatePicker\r\n          label=\"Pick-up Date\"\r\n          inputFormat=\"MM/DD/YYYY\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\TimeDSelector.js",["132"],[],"import * as React from 'react';\r\nimport moment from 'moment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function MaterialUIPickers() {\r\n  const [value, setValue] = React.useState(moment('2014-08-18T21:11:54'));\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n        <TimePicker\r\n          label=\"Drop-off Time\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\DateDSelector.js",["133"],[],"import * as React from 'react';\r\nimport moment from 'moment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function MaterialUIPickers() {\r\n  const [value, setValue] = React.useState(moment('2014-08-18T21:11:54'));\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n        <DesktopDatePicker\r\n          label=\"Drop-off date\"\r\n          inputFormat=\"MM/DD/YYYY\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Home.jsx",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Cars.jsx",["134","135","136"],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\CarFilter.js",["137","138","139","140","141"],[],"import * as React from 'react';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport axios from 'axios';\r\n\r\n//icons\r\nimport GradeIcon from '@mui/icons-material/Grade';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport StarBorder from '@mui/icons-material/StarBorder';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { Button, FormGroup } from '@mui/material';\r\n\r\nexport default function CarFilter() {\r\n    const { useState } = React;\r\n    const [carModelState, setCarModelState] = useState(false);\r\n    const [ManufracturerState, setManufracturerState] = useState(false);\r\n    const [colorState, setColorState] = useState(false);\r\n    const [transmissionState, setTransmissionState] = useState(false);\r\n    const [reviewState, setReviewState] = useState(false);\r\n    const [fuelState, setFuelState] =  useState(false);\r\n    const [driveState, setDriveState] =  useState(false);\r\n    const [checkBoxState, setCheckbox] = useState(false);\r\n\r\n    //different filters\r\n    //quary base on database\r\n    const manufacturers = ['Ford', 'Honda', 'Ram', 'Hyundai', 'Volkswagen', 'Nissan', 'Jeep', 'Kia', 'BMW', 'Dodge', 'Toyota', 'Land Rover',\r\n        'Mazda', 'Chevrolet', 'Mercedes-Benz', 'Porsche', 'INFINITI', 'Jaguar', 'GMC', 'Subaru', 'Audi', 'Lincoln', 'Chrysler',\r\n        'Mitsubishi', 'Cadillac', 'Lexus', 'Acura', 'Buick', 'Genesis', 'Tesla', 'Volvo', 'MINI', 'Scion', 'FIAT', 'Alda Romeo',\r\n        'Ferrari', 'Maserati', 'McLaren', 'Suzuki'];\r\n    const colors = [\"White\", \"Gray\", \"Black\", \"Blue\", \"Red\", \"Green\", \"Orange\", \"Brown\", \"Yellow\", \"Purple\"];\r\n    const models = [\"SUV\", \"Sedan\", \"Truck\", \"Coupe\", \"Minivan\", \"Hatch Back\", \"Wagon\", \"other\"]\r\n    \r\n    const transmissionsType = [\"Auto\", \"CVT\", \"Manual\"];\r\n    const fuelType = [\"Gas\", \"Hybrid\", \"Diesel\", \"Electric\"];\r\n    const driveType = [\"AWD\", \"4WD\", \"FWD\", \"RWD\"];\r\n    \r\n    const [isManufacturerChecked, setIsManufacturerChecked] = React.useState(manufacturers.slice().fill(false));\r\n    const [isColorChecked, setIsColorChecked] = React.useState(colors.slice().fill(false));\r\n    const [isModelChecked, setIsModelChecked] = React.useState(models.slice().fill(false));\r\n    const [isTransmissionTypeChecked, setIsTransmissionTypeChecked] = React.useState(transmissionsType.slice().fill(false));\r\n    const [isFuelTypeChecked, setIsFuelTypeChecked] = React.useState(fuelType.slice().fill(false));\r\n    const [isDriveTypeChecked, setIsDriveTypeChecked] = React.useState(driveType.slice().fill(false));\r\n\r\n\r\n    const toggleCheckboxValue = (someList, index, checkState, setChecked) => {\r\n        setChecked(checkState.map((v, i) => (i === index ? !v : v)));\r\n        console.log(checkState[index])    \r\n    }\r\n\r\n    const handleFilter = () =>{\r\n        const manufacturerValue = [];\r\n        const colorValue =[];\r\n        const modelValue = [];\r\n        const transmissionValue = [];\r\n        const fuelValue = [];\r\n        const driveValue =[];\r\n\r\n        fillArray(manufacturers, isManufacturerChecked, manufacturerValue);\r\n        fillArray(colors, isColorChecked, colorValue);\r\n        fillArray(models, isModelChecked, modelValue);\r\n        fillArray(transmissionsType, isTransmissionTypeChecked, transmissionValue);\r\n        fillArray(fuelType, isFuelTypeChecked, fuelValue);\r\n        fillArray(driveType, isDriveTypeChecked, driveValue);\r\n\r\n        getCars(manufacturerValue);\r\n    }\r\n\r\n    const [cars, setCars] = useState([]);\r\n\r\n    const getCars = async (e) => {\r\n        let j = ''\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8000/api/cars/',\r\n            data: {\r\n                Manufacturer: e.map((element) => `${element}`).join(',')\r\n            }\r\n          }).then((response) => {\r\n            console.log(response.data);\r\n          }, (error) => {\r\n            console.log(error);\r\n          });\r\n          /*j =e.map((element) => `${element}`).join(',');\r\n          console.log(j)*/\r\n  }\r\n\r\n    const fillArray = (objList, objStates, filledList) =>{\r\n        for( let i=0; i< objStates.length; i++){\r\n            if(objStates[i] === true){\r\n                filledList.push(objList[i])  \r\n            }\r\n        }\r\n\r\n    }\r\n    //need constructor for filters\r\n\r\n    return (\r\n        <List\r\n            sx={{ width: '100%', maxWidth: 270, bgcolor: '#fff'}}\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n                <ListSubheader sx={{ border: '1px solid black', bgcolor: '#fff' }} component=\"div\" id=\"nested-list-subheader\">\r\n                    <h2 sx={{ color: 'black' }}><b>Filter</b></h2>\r\n                </ListSubheader>\r\n            }\r\n        >\r\n            \r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setCarModelState(!carModelState)}>\r\n                <ListItemText primary=\"Body Type\" />\r\n                {carModelState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={carModelState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff', maxHeight: 250, overflow: 'auto'  }}>{\r\n                    models.map((model, index) => {\r\n                        return(\r\n                        <FormGroup>\r\n                            <ListItemButton sx={{ pl: 4 }} value={model} key={index} onClick={() => toggleCheckboxValue(models,index, isModelChecked, setIsModelChecked)} >\r\n                                <Checkbox /* add function caller here*/ key={index} checked={isModelChecked[index]} onClick={() => toggleCheckboxValue(models, index, isModelChecked, isModelChecked)}/>\r\n                                <ListItemText primary={`${model}`} />\r\n                            </ListItemButton>\r\n                        </FormGroup>\r\n                        )\r\n                    })\r\n                }\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setManufracturerState(!ManufracturerState)}>\r\n                <ListItemText primary=\"Manufracturer\" />\r\n                {ManufracturerState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={ManufracturerState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff', maxHeight: 250, overflow: 'auto' } }>\r\n                {manufacturers.map((manufacturer, index) => {\r\n                        return(\r\n                            <ListItemButton sx={{ pl: 4 }} value={manufacturer} key={index}  onClick={() => toggleCheckboxValue(manufacturers,index, isManufacturerChecked, setIsManufacturerChecked)} >\r\n                            <Checkbox  key={index} checked={isManufacturerChecked[index]} onClick={() => toggleCheckboxValue(manufacturers, index, isManufacturerChecked, setIsManufacturerChecked)}/>\r\n                            <ListItemText primary={`${manufacturer}`} />\r\n                        </ListItemButton>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setColorState(!colorState)}>\r\n                <ListItemText primary=\"Color\" align=\"left\" />\r\n                {colorState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={colorState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff', maxHeight: 250, overflow: 'auto' }}>\r\n                {colors.map((color, index) => {\r\n\r\n                        return(\r\n                            <ListItemButton sx={{ pl: 4 }} value={color} key={index}  onClick={() => toggleCheckboxValue(colors,index, isColorChecked,setIsColorChecked)} >\r\n                            <Checkbox  key={index} checked={isColorChecked[index]} onClick={() => toggleCheckboxValue(colors, index, isColorChecked, setIsColorChecked)}/>\r\n                            <ListItemText primary={`${color}`} />\r\n                        </ListItemButton>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </Collapse>          \r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setTransmissionState(!transmissionState)}>\r\n                <ListItemText primary=\"Transmission\"/>\r\n                {colorState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={transmissionState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff', maxHeight: 250, overflow: 'auto' }}>\r\n                {transmissionsType.map((transmission, index) => {\r\n                        return(\r\n                            <ListItemButton sx={{ pl: 4 }} value={transmission} key={index}  onClick={() => toggleCheckboxValue(transmissionsType,index, isTransmissionTypeChecked, setIsTransmissionTypeChecked)} >\r\n                            <Checkbox  key={index} checked={isTransmissionTypeChecked[index]} onClick={() => toggleCheckboxValue(transmissionsType, index, isTransmissionTypeChecked, setIsTransmissionTypeChecked)}/>\r\n                            <ListItemText primary={`${transmission}`} />\r\n                        </ListItemButton>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setFuelState(!fuelState)}>\r\n                <ListItemText primary=\"Fuel Type\"/>\r\n                {fuelState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={fuelState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff', maxHeight: 250, overflow: 'auto' }}>\r\n                {fuelType.map((fuel, index) => {\r\n                        return(\r\n                            <ListItemButton sx={{ pl: 4 }} value={fuel} key={index}  onClick={() => toggleCheckboxValue(fuelType,index, isFuelTypeChecked, setIsFuelTypeChecked)} >\r\n                            <Checkbox  key={index} checked={isFuelTypeChecked[index]} onClick={() => toggleCheckboxValue(fuelType, index, isFuelTypeChecked, setIsFuelTypeChecked)}/>\r\n                            <ListItemText primary={`${fuel}`} />\r\n                        </ListItemButton>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setDriveState(!driveState)}>\r\n                <ListItemText primary=\"Drive Type\"/>\r\n                {driveState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={driveState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff', maxHeight: 500, overflow: 'auto' }}>\r\n                {driveType.map((drive, index) => {\r\n                        return(\r\n                            <ListItemButton sx={{ pl: 4 }} value={drive} key={index}  onClick={() => toggleCheckboxValue(driveType,index, isDriveTypeChecked,setIsDriveTypeChecked)} >\r\n                            <Checkbox  key={index} checked={isDriveTypeChecked[index]} onClick={() => toggleCheckboxValue(driveType, index, isDriveTypeChecked, setIsDriveTypeChecked)}/>\r\n                            <ListItemText primary={`${drive}`} />\r\n                        </ListItemButton>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ border: '1px solid black' }} onClick={() => setReviewState(!reviewState)}>\r\n                <ListItemText primary=\"Average Customer Review\" />\r\n                {reviewState ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={reviewState} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding sx={{ bgcolor: '#fff' }}>\r\n                    <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <StarBorder></StarBorder>\r\n                        </ListItemIcon>\r\n                    </ListItemButton>\r\n                    <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <StarBorder></StarBorder>\r\n                            <StarBorder></StarBorder>\r\n                        </ListItemIcon>\r\n                    </ListItemButton>\r\n                    <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <StarBorder></StarBorder>\r\n                            <StarBorder></StarBorder>\r\n                            <StarBorder></StarBorder>\r\n                        </ListItemIcon>\r\n                    </ListItemButton>\r\n                    <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemIcon>\r\n                            <GradeIcon style={{ color: '#f4af03' }}></GradeIcon>\r\n                            <StarBorder></StarBorder>\r\n                            <StarBorder></StarBorder>\r\n                            <StarBorder></StarBorder>\r\n                            <StarBorder></StarBorder>\r\n                        </ListItemIcon>\r\n                    </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n            <div>\r\n                <Button variant=\"contained\" sx={{backgroundColor:'#fff', color: 'black'}} fullWidth={true} onClick={handleFilter}>filter</Button>\r\n            </div>\r\n        </List>\r\n    );\r\n}\r\n","E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\components\\AdminHeader.js",["142"],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\UpdateClient.jsx",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\Details.jsx",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Rentals.jsx",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Returns.jsx",[],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Home.jsx",["143","144","145"],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\Cars.jsx",["146"],[],"E:\\Documents\\Homework\\Computer Science\\CMPT 315\\CMPT315-Car-Rental-Project\\ReactApp\\315rental\\src\\pages\\admin\\RentCar.jsx",[],[],{"ruleId":"147","severity":1,"message":"148","line":17,"column":8,"nodeType":"149","messageId":"150","endLine":17,"endColumn":12},{"ruleId":"147","severity":1,"message":"151","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":27},{"ruleId":"147","severity":1,"message":"152","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":20},{"ruleId":"147","severity":1,"message":"151","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":27},{"ruleId":"147","severity":1,"message":"152","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":20},{"ruleId":"147","severity":1,"message":"153","line":1,"column":34,"nodeType":"149","messageId":"150","endLine":1,"endColumn":45},{"ruleId":"147","severity":1,"message":"154","line":1,"column":71,"nodeType":"149","messageId":"150","endLine":1,"endColumn":78},{"ruleId":"155","severity":1,"message":"156","line":77,"column":3,"nodeType":"157","messageId":"158","endLine":77,"endColumn":44},{"ruleId":"147","severity":1,"message":"159","line":28,"column":12,"nodeType":"149","messageId":"150","endLine":28,"endColumn":25},{"ruleId":"147","severity":1,"message":"160","line":28,"column":27,"nodeType":"149","messageId":"150","endLine":28,"endColumn":38},{"ruleId":"147","severity":1,"message":"161","line":74,"column":12,"nodeType":"149","messageId":"150","endLine":74,"endColumn":16},{"ruleId":"147","severity":1,"message":"162","line":74,"column":18,"nodeType":"149","messageId":"150","endLine":74,"endColumn":25},{"ruleId":"147","severity":1,"message":"163","line":77,"column":13,"nodeType":"149","messageId":"150","endLine":77,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":17,"column":8,"nodeType":"149","messageId":"150","endLine":17,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":3,"column":16,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"165","line":28,"column":14,"nodeType":"149","messageId":"150","endLine":28,"endColumn":24},{"ruleId":"147","severity":1,"message":"166","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":17},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'DesktopDatePicker' is defined but never used.","'TimePicker' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'checkBoxState' is assigned a value but never used.","'setCheckbox' is assigned a value but never used.","'cars' is assigned a value but never used.","'setCars' is assigned a value but never used.","'j' is assigned a value but never used.","'Grid' is defined but never used.","'createData' is defined but never used.","'bgcolor' is defined but never used."]